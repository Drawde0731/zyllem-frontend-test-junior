{"ast":null,"code":"import * as i0 from \"@angular/core\";\n// Define an abstract class with common functionality\nexport class AbstractArticleComponent {\n  constructor() {\n    this.articles = [];\n    // Initialize common properties or perform setup here\n  }\n\n  ngOnInit() {\n    // Common initialization logic here\n  }\n}\nexport let ArticleNormalComponent = /*#__PURE__*/(() => {\n  class ArticleNormalComponent extends AbstractArticleComponent {\n    constructor() {\n      super(); // Call the constructor of the abstract class\n    }\n    // Implement the abstract method\n    fetchArticles() {\n      // Implement how to fetch articles specific to this component\n    }\n    static #_ = this.ɵfac = function ArticleNormalComponent_Factory(t) {\n      return new (t || ArticleNormalComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ArticleNormalComponent,\n      selectors: [[\"app-article-normal\"]],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      decls: 1,\n      vars: 1,\n      consts: [[3, \"innerHTML\"]],\n      template: function ArticleNormalComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"div\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"innerHTML\", ctx.article.description, i0.ɵɵsanitizeHtml);\n        }\n      }\n    });\n  }\n  return ArticleNormalComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}